/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 11.11.11
  Forc version: 22.22.22
  Fuel-Core version: 33.33.33
*/

import { readFileSync } from 'fs';

import type { BigNumberish, BaseWalletLocked, Provider, ScriptFactory } from 'fuels';

type MyScriptAbiInputs = [x: string, y: string];
type MyScriptAbiOutput = boolean;

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "str[10]",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "x",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "y",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    }
  ],
  "loggedTypes": [],
  "messagesTypes": []
}

const _bin = ''

export class MyScriptAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin

  static createInstance(walletOrProvider: BaseWalletLocked | Provider) {

    const { abi, bin } = MyScriptAbi__factory

    const script = new ScriptFactory<
      MyScriptAbiInputs,
      MyScriptAbiOutput,
    >(bin, abi, walletOrProvider);

    return script;

  }

}
