/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet } from "fuels";
import { Interface, Contract } from "fuels";
import type {
  CoverageContractAbi,
  CoverageContractAbiInterface,
} from "../CoverageContractAbi";
const _abi = [
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "u8",
        components: null,
      },
    ],
    name: "echo_u8",
    outputs: [
      {
        name: "",
        type: "u8",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "u16",
        components: null,
      },
    ],
    name: "echo_u16",
    outputs: [
      {
        name: "",
        type: "u16",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "u32",
        components: null,
      },
    ],
    name: "echo_u32",
    outputs: [
      {
        name: "",
        type: "u32",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "u64",
        components: null,
      },
    ],
    name: "echo_u64",
    outputs: [
      {
        name: "",
        type: "u64",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "bool",
        components: null,
      },
    ],
    name: "echo_bool",
    outputs: [
      {
        name: "",
        type: "bool",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "b256",
        components: null,
      },
    ],
    name: "echo_b256",
    outputs: [
      {
        name: "",
        type: "b256",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "str[1]",
        components: null,
      },
    ],
    name: "echo_str_1",
    outputs: [
      {
        name: "",
        type: "str[1]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "str[2]",
        components: null,
      },
    ],
    name: "echo_str_2",
    outputs: [
      {
        name: "",
        type: "str[2]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "str[3]",
        components: null,
      },
    ],
    name: "echo_str_3",
    outputs: [
      {
        name: "",
        type: "str[3]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "str[8]",
        components: null,
      },
    ],
    name: "echo_str_8",
    outputs: [
      {
        name: "",
        type: "str[8]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "str[9]",
        components: null,
      },
    ],
    name: "echo_str_9",
    outputs: [
      {
        name: "",
        type: "str[9]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "(u8, u8)",
        components: null,
      },
    ],
    name: "echo_tuple_u8",
    outputs: [
      {
        name: "",
        type: "(u8, u8)",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "(u64, u64)",
        components: null,
      },
    ],
    name: "echo_tuple_u64",
    outputs: [
      {
        name: "",
        type: "(u64, u64)",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "(bool, u64)",
        components: null,
      },
    ],
    name: "echo_tuple_mixed",
    outputs: [
      {
        name: "",
        type: "(bool, u64)",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "[u8; 2]",
        components: null,
      },
    ],
    name: "echo_array_u8",
    outputs: [
      {
        name: "",
        type: "[u8; 2]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "[u64; 5]",
        components: null,
      },
    ],
    name: "echo_array_u64",
    outputs: [
      {
        name: "",
        type: "[u64; 5]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "[bool; 2]",
        components: null,
      },
    ],
    name: "echo_array_bool",
    outputs: [
      {
        name: "",
        type: "[bool; 2]",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "struct SmallStruct",
        components: [
          {
            name: "i",
            type: "u8",
            components: null,
          },
        ],
      },
    ],
    name: "echo_struct_small",
    outputs: [
      {
        name: "",
        type: "struct SmallStruct",
        components: [
          {
            name: "i",
            type: "u8",
            components: null,
          },
        ],
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "struct BigStruct",
        components: [
          {
            name: "i",
            type: "b256",
            components: null,
          },
        ],
      },
    ],
    name: "echo_struct_big",
    outputs: [
      {
        name: "",
        type: "struct BigStruct",
        components: [
          {
            name: "i",
            type: "b256",
            components: null,
          },
        ],
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "enum SmallEnum",
        components: [
          {
            name: "Empty",
            type: "()",
            components: null,
          },
        ],
      },
    ],
    name: "echo_enum_small",
    outputs: [
      {
        name: "",
        type: "enum SmallEnum",
        components: [
          {
            name: "Empty",
            type: "()",
            components: null,
          },
        ],
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "input",
        type: "enum BigEnum",
        components: [
          {
            name: "Address",
            type: "b256",
            components: null,
          },
        ],
      },
    ],
    name: "echo_enum_big",
    outputs: [
      {
        name: "",
        type: "enum BigEnum",
        components: [
          {
            name: "Address",
            type: "b256",
            components: null,
          },
        ],
      },
    ],
  },
];

export class CoverageContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): CoverageContractAbiInterface {
    return new Interface(_abi) as CoverageContractAbiInterface;
  }
  static connect(
    id: string,
    walletOrProvider: Wallet | Provider
  ): CoverageContractAbi {
    return new Contract(id, _abi, walletOrProvider) as CoverageContractAbi;
  }
}
